{"ast":null,"code":"var _jsxFileName = \"D:\\\\AndroidProject\\\\family-tree\\\\src\\\\screens\\\\loginScreen\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './styles.css';\nimport { IMG_Quarter1, IMG_Quarter2 } from '../../assets/images';\nimport { IC_User, IC_Lock } from \"../../assets/icons\";\nimport { app } from \"../../firebaseConfig\";\nimport { GoogleAuthProvider } from \"firebase/auth\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithRedirect, signOut } from \"firebase/auth\";\nimport { getRedirectResult } from \"firebase/auth\";\n\n// const googleProvider = new GoogleAuthProvider();\n// const auth = getAuth();\n// signInWithRedirect(auth, provider);\n// signOut(auth).then(() => {\n//     // Sign-out successful.\n// }).catch((error) => {\n//     // An error happened.\n// });\n\n// getRedirectResult(auth)\n//     .then((result) => {\n//         // This gives you a Google Access Token. You can use it to access Google APIs.\n//         const credential = GoogleAuthProvider.credentialFromResult(result);\n//         const token = credential.accessToken;\n\n//         // The signed-in user info.\n//         const user = result.user;\n//     }).catch((error) => {\n//         // Handle Errors here.\n//         const errorCode = error.code;\n//         const errorMessage = error.message;\n//         // The email of the user's account used.\n//         const email = error.customData.email;\n//         // The AuthCredential type that was used.\n//         const credential = GoogleAuthProvider.credentialFromError(error);\n//         // ...\n//     });\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  let auth = getAuth();\n  const googleProvider = new GoogleAuthProvider();\n  const [data, setData] = useState({});\n  const handleInput = event => {\n    let newInput = {\n      [event.target.name]: event.target.value\n    };\n    setData({\n      ...data,\n      ...newInput\n    });\n  };\n  const handleSubmit = () => {\n    //createUserWithEmailAndPassword(auth, data.email, data.password)\n    signInWithEmailAndPassword(auth, data.email, data.password).then(response => {\n      console.log(response.user);\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n  const handleGoogleSubmit = () => {\n    signInWithRedirect(auth, googleProvider).then(response => {\n      console.log(response.user);\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: IMG_Quarter1,\n      className: \"topRightDecor\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: IMG_Quarter2,\n      className: \"bottomLeftDecor\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"loginContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"usernameInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: IC_User,\n          className: \"icon\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          placeholder: \"EMAIL\",\n          class: \"input\",\n          type: \"text\",\n          onChange: event => handleInput(event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"passwordInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: IC_Lock,\n          className: \"icon\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          placeholder: \"PASSWORD\",\n          class: \"input\",\n          type: \"password\",\n          onChange: event => handleInput(event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        class: \"button\",\n        href: \"javascript:void(0);\",\n        onClick: handleSubmit,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"autoLoginContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        class: \"optionButton\",\n        href: \"javascript:void(0);\",\n        onClick: handleGoogleSubmit,\n        children: \"Sign in with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"0PQhZyvNHTQmyp/cNfIsZk8MtX8=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","IMG_Quarter1","IMG_Quarter2","IC_User","IC_Lock","app","GoogleAuthProvider","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithRedirect","signOut","getRedirectResult","Login","auth","googleProvider","data","setData","handleInput","event","newInput","target","name","value","handleSubmit","email","password","then","response","console","log","user","catch","err","alert","message","handleGoogleSubmit"],"sources":["D:/AndroidProject/family-tree/src/screens/loginScreen/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './styles.css';\r\nimport { IMG_Quarter1, IMG_Quarter2 } from '../../assets/images';\r\nimport { IC_User, IC_Lock } from \"../../assets/icons\";\r\n\r\nimport { app } from \"../../firebaseConfig\";\r\n\r\nimport { GoogleAuthProvider } from \"firebase/auth\";\r\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithRedirect, signOut } from \"firebase/auth\";\r\nimport { getRedirectResult } from \"firebase/auth\";\r\n\r\n\r\n// const googleProvider = new GoogleAuthProvider();\r\n// const auth = getAuth();\r\n// signInWithRedirect(auth, provider);\r\n// signOut(auth).then(() => {\r\n//     // Sign-out successful.\r\n// }).catch((error) => {\r\n//     // An error happened.\r\n// });\r\n\r\n// getRedirectResult(auth)\r\n//     .then((result) => {\r\n//         // This gives you a Google Access Token. You can use it to access Google APIs.\r\n//         const credential = GoogleAuthProvider.credentialFromResult(result);\r\n//         const token = credential.accessToken;\r\n\r\n//         // The signed-in user info.\r\n//         const user = result.user;\r\n//     }).catch((error) => {\r\n//         // Handle Errors here.\r\n//         const errorCode = error.code;\r\n//         const errorMessage = error.message;\r\n//         // The email of the user's account used.\r\n//         const email = error.customData.email;\r\n//         // The AuthCredential type that was used.\r\n//         const credential = GoogleAuthProvider.credentialFromError(error);\r\n//         // ...\r\n//     });\r\n\r\nexport default function Login() {\r\n    let auth = getAuth();\r\n    const googleProvider = new GoogleAuthProvider();\r\n    const [data, setData] = useState({});\r\n    const handleInput = (event) => {\r\n        let newInput = { [event.target.name]: event.target.value };\r\n        setData({ ...data, ...newInput });\r\n    };\r\n    const handleSubmit = () => {\r\n        //createUserWithEmailAndPassword(auth, data.email, data.password)\r\n        signInWithEmailAndPassword(auth, data.email, data.password)\r\n            .then((response) => {\r\n                console.log(response.user)\r\n            })\r\n            .catch((err) => {\r\n                alert(err.message)\r\n            })\r\n    }\r\n    const handleGoogleSubmit = () => {\r\n        signInWithRedirect(auth, googleProvider)\r\n            .then((response) => {\r\n                console.log(response.user);\r\n            })\r\n            .catch((err) => {\r\n                alert(err.message)\r\n            })\r\n    }\r\n    return (\r\n        <div class=\"container\">\r\n            <img src={IMG_Quarter1} className=\"topRightDecor\" alt=\"\" />\r\n            <img src={IMG_Quarter2} className=\"bottomLeftDecor\" alt=\"\" />\r\n            <form class=\"loginContainer\">\r\n                <div class=\"usernameInput\">\r\n                    <img src={IC_User} className=\"icon\" alt=\"\" />\r\n                    <input\r\n                        name=\"email\"\r\n                        placeholder=\"EMAIL\"\r\n                        class=\"input\"\r\n                        type=\"text\"\r\n                        onChange={event => handleInput(event)}></input>\r\n                </div>\r\n\r\n                <div class=\"passwordInput\">\r\n                    <img src={IC_Lock} className=\"icon\" alt=\"\" />\r\n                    <input\r\n                        name=\"password\"\r\n                        placeholder=\"PASSWORD\"\r\n                        class=\"input\"\r\n                        type=\"password\"\r\n                        onChange={event => handleInput(event)}></input>\r\n                </div>\r\n\r\n                <a class=\"button\" href=\"javascript:void(0);\" onClick={handleSubmit}>Login</a>\r\n            </form>\r\n\r\n            <div class=\"autoLoginContainer\">\r\n                <a class=\"optionButton\" href=\"javascript:void(0);\" onClick={handleGoogleSubmit}>Sign in with Google</a>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}