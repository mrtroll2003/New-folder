{"ast":null,"code":"var _jsxFileName = \"D:\\\\AndroidProject\\\\family-tree\\\\src\\\\screens\\\\loginScreen\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './styles.css';\nimport { IMG_Quarter1, IMG_Quarter2 } from '../../assets/images';\nimport { IC_User, IC_Lock } from \"../../assets/icons\";\nimport { app } from \"../../firebaseConfig\";\nimport { GoogleAuthProvider } from \"firebase/auth\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithRedirect, signOut } from \"firebase/auth\";\nimport { getRedirectResult } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst provider = new GoogleAuthProvider();\nconst auth = getAuth();\nsignInWithRedirect(auth, provider);\nsignOut(auth).then(() => {\n  // Sign-out successful.\n}).catch(error => {\n  // An error happened.\n});\ngetRedirectResult(auth).then(result => {\n  // This gives you a Google Access Token. You can use it to access Google APIs.\n  const credential = GoogleAuthProvider.credentialFromResult(result);\n  const token = credential.accessToken;\n\n  // The signed-in user info.\n  const user = result.user;\n}).catch(error => {\n  // Handle Errors here.\n  const errorCode = error.code;\n  const errorMessage = error.message;\n  // The email of the user's account used.\n  const email = error.customData.email;\n  // The AuthCredential type that was used.\n  const credential = GoogleAuthProvider.credentialFromError(error);\n  // ...\n});\n\nconst Login = () => {\n  _s();\n  let auth = getAuth();\n  const [data, setData] = useState({});\n  const handleInput = event => {\n    let newInput = {\n      [event.target.name]: event.target.value\n    };\n    setData({\n      ...data,\n      ...newInput\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: IMG_Quarter1,\n      className: \"topRightDecor\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: IMG_Quarter2,\n      className: \"bottomLeftDecor\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"loginContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"usernameInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: IC_User,\n          className: \"icon\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"USERNAME\",\n          class: \"input\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"passwordInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: IC_Lock,\n          className: \"icon\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"PASSWORD\",\n          class: \"input\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        class: \"button\",\n        href: \"javascript:void(0);\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"autoLoginContainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"0PQhZyvNHTQmyp/cNfIsZk8MtX8=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","IMG_Quarter1","IMG_Quarter2","IC_User","IC_Lock","app","GoogleAuthProvider","getAuth","createUserWithEmailAndPassword","signInWithRedirect","signOut","getRedirectResult","provider","auth","then","catch","error","result","credential","credentialFromResult","token","accessToken","user","errorCode","code","errorMessage","message","email","customData","credentialFromError","Login","data","setData","handleInput","event","newInput","target","name","value"],"sources":["D:/AndroidProject/family-tree/src/screens/loginScreen/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './styles.css';\r\nimport { IMG_Quarter1, IMG_Quarter2 } from '../../assets/images';\r\nimport { IC_User, IC_Lock } from \"../../assets/icons\";\r\n\r\nimport { app } from \"../../firebaseConfig\";\r\n\r\nimport { GoogleAuthProvider } from \"firebase/auth\";\r\nimport { getAuth, createUserWithEmailAndPassword, signInWithRedirect, signOut } from \"firebase/auth\";\r\nimport { getRedirectResult } from \"firebase/auth\";\r\n\r\n\r\nconst provider = new GoogleAuthProvider();\r\nconst auth = getAuth();\r\nsignInWithRedirect(auth, provider);\r\nsignOut(auth).then(() => {\r\n    // Sign-out successful.\r\n}).catch((error) => {\r\n    // An error happened.\r\n});\r\n\r\ngetRedirectResult(auth)\r\n    .then((result) => {\r\n        // This gives you a Google Access Token. You can use it to access Google APIs.\r\n        const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        const token = credential.accessToken;\r\n\r\n        // The signed-in user info.\r\n        const user = result.user;\r\n    }).catch((error) => {\r\n        // Handle Errors here.\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        const email = error.customData.email;\r\n        // The AuthCredential type that was used.\r\n        const credential = GoogleAuthProvider.credentialFromError(error);\r\n        // ...\r\n    });\r\n\r\nconst Login = () => {\r\n    let auth = getAuth();\r\n    const [data, setData] = useState({});\r\n    const handleInput = (event) => {\r\n        let newInput = { [event.target.name]: event.target.value };\r\n        setData({ ...data, ...newInput })\r\n    }\r\n    return (\r\n        <div class=\"container\">\r\n            <img src={IMG_Quarter1} className=\"topRightDecor\" alt=\"\" />\r\n            <img src={IMG_Quarter2} className=\"bottomLeftDecor\" alt=\"\" />\r\n            <form class=\"loginContainer\">\r\n                <div class=\"usernameInput\">\r\n                    <img src={IC_User} className=\"icon\" alt=\"\" />\r\n                    <input placeholder=\"USERNAME\" class=\"input\" type=\"text\"></input>\r\n                </div>\r\n\r\n                <div class=\"passwordInput\">\r\n                    <img src={IC_Lock} className=\"icon\" alt=\"\" />\r\n                    <input placeholder=\"PASSWORD\" class=\"input\" type=\"password\"></input>\r\n                </div>\r\n\r\n                <a class=\"button\" href=\"javascript:void(0);\">Login</a>\r\n            </form>\r\n\r\n            <div class=\"autoLoginContainer\">\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module"}